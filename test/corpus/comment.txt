===
cmt.one | Empty document with single line comment parses correctly
===
; Empty document with a comment
---
(document (comment))

===
cmt.many | Consecutive line comments correctly parse as multiple comments
===
; Empty document with a comment
; that spans two lines
---
(document (comment) (comment))

===
cmt.can_sep | Comments can act as separators in records and lists
===
"key" "value" ;C1
;C2
"key" "value"
---
(document
    (record_entry
        key:    (quoted_string)
        value:  (quoted_string))
    (comment)
    (comment)
    (record_entry
        key:    (quoted_string)
        value:  (quoted_string)))

===
cmt.in_qstr | Comments are not scanned inside quoted strings
===
";not a comment" ";"     ; a comment
---
(document
    (record_entry
        key:    (quoted_string)
        value:  (quoted_string))
    (comment))

===
cmt.in_rec | Comments are parsed correctly inside records
===
"key" {
    ; Not the value
    "key" "value"
}
---
(document
    (record_entry
        key:    (quoted_string)
        value:  (record
                    (comment)
                    (record_entry
                        key:    (quoted_string)
                        value:  (quoted_string)))))

===
cmt.in_list | Comments are parsed correctly inside lists
===
"key" [
    ; Not the first element
    "first_element"
]
---
(document
    (record_entry
        key:    (quoted_string)
        value:  (list (comment) (quoted_string))))
