===
ml.inline | Multiline string can start on same line as record key
===
key: >>Multiline
---
(document (record_entry key: (unquoted_string) value: (multiline_string)))

===
ml.newline | Single-line multiline string following a newline is parsed properly
===

key:
    >>Multiline
---
(document (record_entry key: (unquoted_string) value: (multiline_string)))

===
ml.multi | Multiline multiline string following a newline parses
===
key:
    >>Multiline
    >>string
---
(document (record_entry key: (unquoted_string) value: (multiline_string)))

===
ml.empty | Empty multiline string is parsed properly
===
key: >>
---
(document (record_entry key: (unquoted_string) value: (multiline_string)))

===
ml.empty_multi | Multi-line empty multiline string is parsed properly
===
key: >>
     >>
---
(document (record_entry key: (unquoted_string) value: (multiline_string)))

===
ml.in_list | Multiline strings in list can be newline-separated
===
list: [
    >>hello

    >>goodbye
]
---
(document
    (record_entry
        key: (unquoted_string)
        value: (list (multiline_string) (multiline_string))))

===
ml.in_list.cmt | Multiline strings in list can be comment-separated
===
list: [
    >>first list element
    ;separating comment
    >>last list element
]
---
(document
    (record_entry
        key:    (unquoted_string)
        value:  (list (multiline_string) (comment) (multiline_string))))

===
ml.in_list.comma | Multiline strings in list can be comma-separated
===
list: [
    >>first
    >>list
    >>element
    ,
    >>second
    >>list
    >>element
]
---
(document
    (record_entry
        key:    (unquoted_string)
        value:  (list (multiline_string) (multiline_string))))

===
ml.ml_sigil | `>>' is not scanned inside a multiline string
===
key: >>hello>>there
     >>
---
(document (record_entry key: (unquoted_string) value: (multiline_string)))

===
ml.many | Multiple multiline string keys are parsed correctly
===
key1:   >>multiline
        >> string

key2:   >>multiline
        >> string
---
(document
    (record_entry
        key:    (unquoted_string)
        value:  (multiline_string))
    (record_entry
        key:    (unquoted_string)
        value:  (multiline_string)))

===
ml.cmt | Comments are not scanned inside multiline strings
===
key:    >>Multiline
        >>string ;not a comment
        >>; not a comment
---
(document
    (record_entry
        key:    (unquoted_string)
        value:  (multiline_string)))

